// Docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  trainings Training[]
  workouts Workout[]
  series Serie[]
  exercices Exercice[]
}

model Training {
  id Int @id @default(autoincrement())
  name String
  description String @default("")
  workouts Workout[]
  user User @relation(fields: [userId], references: [id])
  userId Int
}

model Workout {
  id Int @id @default(autoincrement())
  name String
  description String @default("")
  exercices Exercice[]
  series Serie[]
  training Training @relation(fields: [trainingId], references: [id])
  trainingId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
}

model Serie {
  id Int @id @default(autoincrement())
  date DateTime @default(now())
  reps Int @default(0)
  weight Float @default(0)
  note String @default("")
  spoted Boolean @default(false)
  exercice Exercice @relation(fields: [exerciceId], references: [id])
  exerciceId Int
  workout Workout @relation(fields: [workoutId], references: [id])
  workoutId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
}

model Exercice {
  id Int @id @default(autoincrement())
  name String
  description String @default("")
  category ExerciceCategory @relation(fields: [categoryId], references: [id])
  categoryId Int
  workouts Workout[]
  series Serie[]
  user User @relation(fields: [userId], references: [id])
  userId Int
}

model ExerciceCategory {
  id Int @id @default(autoincrement())
  name String
  exercices Exercice[]
}
